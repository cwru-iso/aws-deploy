# {{ ansible_managed }}
# Created on: {{ ansible_date_time.date }} {{ ansible_date_time.time }}

# generated 2020-02-17, Mozilla Guideline v5.4, nginx 1.17.8, OpenSSL 1.1.1d, intermediate configuration
# https://ssl-config.mozilla.org/#server=nginx&version=1.17.8&config=intermediate&openssl=1.1.1d&guideline=5.4
server {
    listen {{ bookstack_http_port }} default_server;
    listen [::]:{{ bookstack_http_port }} default_server;
    server_name _;

    return 301 https://$host$request_uri;
}

server {
    listen {{ bookstack_https_port }} ssl http2;
    listen [::]:{{ bookstack_https_port }} ssl http2;
    server_name _;

    root /var/www/html/public;
    index index.php index.html index.htm;

    ssl_certificate /config/keys/cert.crt;
    ssl_certificate_key /config/keys/cert.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # dhparam generated outside of container via Ansible
    ssl_dhparam /etc/ssl/private/dhparam.pem;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

{% if ssl_hsts_enabled is sameas true %}
    # HSTS (ngx_http_headers_module is required) ({{ ssl_hsts_age }} seconds)
    add_header Strict-Transport-Security "max-age={{ ssl_hsts_age }}" always;
    
{% endif %}
{% if 'skipped' not in ssl_ocsp_stapling %}
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/ssl/private/cert.chain.crt;

    # replace with the IP address of your resolver
    resolver {{ ssl_ocsp_stapling_resolvers | join(" ") }};
    
{% endif %}
    # Recommended BookStack settings
    client_max_body_size 0;

    # Not Authorized
    error_page 599 = @noauth;
    location @noauth {
        try_files $uri $uri/ /index.php?$args;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_index index.php;

        fastcgi_pass 127.0.0.1:9000;
        include /etc/nginx/fastcgi_params;
    }
}
