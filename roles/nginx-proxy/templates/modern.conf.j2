# {{ ansible_managed }}
# Created on: {{ ansible_date_time.date }} {{ ansible_date_time.time }}

# generated 2020-02-17, Mozilla Guideline v5.4, nginx 1.17.8, OpenSSL 1.1.1d, modern configuration
# https://ssl-config.mozilla.org/#server=nginx&version=1.17.8&config=modern&openssl=1.1.1d&guideline=5.4
server {
    listen {{ proxy_container_http_port }} default_server;
    listen [::]:{{ proxy_container_http_port }} default_server;
    server_name {{ ssl_cert_domain }};

    return 301 https://$host$request_uri;
}

server {
    listen {{ proxy_container_https_port }} ssl http2;
    listen [::]:{{ proxy_container_https_port }} ssl http2;
    server_name {{ ssl_cert_domain }};

    ssl_certificate /etc/ssl/private/{{ ssl_cert_domain }}.crt;
    ssl_certificate_key /etc/ssl/private/{{ ssl_cert_domain }}.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # modern configuration
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;

{% if ssl_hsts_enabled is sameas true %}
    # HSTS (ngx_http_headers_module is required) ({{ ssl_hsts_age }} seconds)
    add_header Strict-Transport-Security "max-age={{ ssl_hsts_age }}" always;
    
{% endif %}
{% if 'skipped' not in ssl_ocsp_stapling %}
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/ssl/private/{{ ssl_cert_domain }}.chain.crt;

    # replace with the IP address of your resolver
    resolver {{ ssl_ocsp_stapling_resolvers | join(" ") }};
    
{% endif %}
    # Recommended settings for reverse proxy
    send_timeout 600;
    client_max_body_size 2G;
    client_header_buffer_size 8k;

    # Reverse proxy
    location / {
        include proxy_params;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        proxy_pass http://{{ proxy_application_host }}:{{ proxy_application_port }};
        proxy_redirect $scheme://$host:{{ proxy_application_port }} $scheme://$host;
    }
}
